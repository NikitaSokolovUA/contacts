{"version":3,"file":"static/js/40.0f1c52c2.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/UserCard/UserCard.jsx","redux/users/useSelector.js","components/UsersSkeleton/UsersSkeleton.jsx","pages/ContactScreen/ContactPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MainContainer = styled.div`\n    width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  /* height: calc(100vh - 120px); */\n  padding: 0 15px;\n`","import { MainContainer } from \"./Container.styled\"\n\nconst Container = ({children})=>{\n    return <MainContainer>\n        {children}\n    </MainContainer>\n\n}\n\nexport default Container","const { Avatar, CardContent, Typography, Box } = require('@mui/material');\n\nconst UserCard = ({ user }) => {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: 300,\n        height: 300,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      boxShadow={2}\n    >\n      <Avatar src=\"/broken-image.jpg\" sx={{ width: 100, height: 100 }} />\n\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h3\" textAlign=\"center\">\n          {user.lastName} {user.firstName}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\" textAlign=\"center\">\n          {user.birthDate}\n        </Typography>\n        <Typography variant=\"body2\" textAlign=\"center\">\n          {user.phone}\n        </Typography>\n        <Typography variant=\"body2\" textAlign=\"center\">\n          {user.email}\n        </Typography>\n      </CardContent>\n    </Box>\n  );\n};\n\nexport default UserCard;\n","export const selectUsers = state => state.users.users.items;\nexport const selectIsLoading = state => state.users.users.isLoading;\n","import { Stack } from '@mui/system';\nimport { Skeleton, Box } from '@mui/material';\nimport { useState } from 'react';\n\nconst UsersSkeleton = () => {\n  const [array] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n  return (\n    <Stack\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{ flexWrap: 'wrap', gap: 2 }}\n      direction={{ xs: 'column', sm: 'row' }}\n      mt={2}\n    >\n      {array.map(item => (\n        <Box\n          key={item}\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            width: 300,\n            height: 300,\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          boxShadow={2}\n        >\n          <Skeleton\n            animation=\"wave\"\n            variant=\"circular\"\n            width={100}\n            height={100}\n            style={{ marginBottom: 10 }}\n          />\n          <Skeleton\n            animation=\"wave\"\n            height={20}\n            width=\"80%\"\n            style={{ marginBottom: 6 }}\n          />\n          <Skeleton\n            animation=\"wave\"\n            height={20}\n            width=\"40%\"\n            style={{ marginBottom: 6 }}\n          />\n          <Skeleton\n            animation=\"wave\"\n            height={20}\n            width=\"60%\"\n            style={{ marginBottom: 6 }}\n          />\n          <Skeleton\n            animation=\"wave\"\n            height={20}\n            width=\"60%\"\n            style={{ marginBottom: 6 }}\n          />\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nexport default UsersSkeleton;\n","import { Stack } from '@mui/system';\nimport Typography from '@mui/material/Typography';\nimport Container from 'components/Container';\nimport UserCard from 'components/UserCard';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsers } from 'redux/users/userOperations';\nimport { selectIsLoading, selectUsers } from 'redux/users/useSelector';\nimport UsersSkeleton from 'components/UsersSkeleton';\n\nconst ContactScreen = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectUsers);\n  const isLoading = useSelector(selectIsLoading);\n  console.log(isLoading);\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" component=\"h2\" textAlign=\"center\">\n        Contacts\n      </Typography>\n\n      {isLoading ? (\n        <UsersSkeleton />\n      ) : (\n        <Stack\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          sx={{ flexWrap: 'wrap', gap: 2 }}\n          direction={{ xs: 'column', sm: 'row' }}\n          mt={2}\n        >\n          {items.map(item => (\n            <UserCard user={item.user} key={item.id} />\n          ))}\n        </Stack>\n      )}\n    </Container>\n  );\n};\n\nexport default ContactScreen;\n"],"names":["MainContainer","styled","children","require","Avatar","CardContent","Typography","Box","user","sx","display","flexDirection","width","height","justifyContent","alignItems","boxShadow","src","variant","component","textAlign","lastName","firstName","mb","color","birthDate","phone","email","selectUsers","state","users","items","selectIsLoading","isLoading","useState","array","Stack","flexWrap","gap","direction","xs","sm","mt","map","item","Skeleton","animation","style","marginBottom","dispatch","useDispatch","useSelector","console","log","useEffect","fetchUsers","id"],"sourceRoot":""}